swagger: '2.0'
info:
  version: 1.0.0
  title: TODO App
host: localhost:3000
basePath: /api
schemes:
  - http
  - https
tags:
  - name: auth
    description: authentication apis
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
definitions:
  SignUp:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        minLength: 8
    required:
      - email
      - password
  SignIn:
    type: object
    properties:
      email:
        type: string
        format: email
      password:
        type: string
    required:
      - email
      - password
  LoginResponse:
    type: object
    properties:
      success:
        type: boolean
      data:
        type: object
        properties:
          accessToken:
            type: string
          refreshToken:
            type: string
  Error:
    type: object
    properties:
      success:
        type: boolean
      error:
        type: string
    example:
      success: false
      error: error message
  AccessTokenResponse:
    type: object
    properties:
      success:
        type: boolean
      data:
        type: object
        properties:
          accessToken:
            type: string
paths:
  /auth/signup:
    post:
      summary: user register
      tags:
        - auth
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            $ref: '#/definitions/SignUp'
      responses:
        '201':
          description: Register success
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
  /auth/verify_account:
    post:
      summary: user account verification
      tags:
        - auth
      parameters:
        - in: body
          name: token
          description: Account verification token.
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        '200':
          description: Account verified successfully
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
  /auth/signin:
    post:
      summary: user signin
      tags:
        - auth
      parameters:
        - in: body
          name: user
          description: The user to signin.
          schema:
            $ref: '#/definitions/SignIn'
      responses:
        '200':
          description: Login success
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: unauthorized request
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/Error'
  /auth/generate_access_token:
    post:
      summary: generate access token using refresh token
      tags:
        - auth
      parameters:
        - in: body
          name: refreshToken
          description: refresh token
          schema:
            type: object
            properties:
              refreshToken:
                type: string
      responses:
        '200':
          description: Access token generated success
          schema:
            $ref: '#/definitions/AccessTokenResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: unauthorized request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Forbidden request
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: internal server error
          schema:
            $ref: '#/definitions/Error'
